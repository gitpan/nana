package Nana::Token;
use strict;
use warnings;
use parent qw(Exporter);

use constant {
    TOKEN_EOF => 0,
    TOKEN_CMP => 1,
    TOKEN_GE => 2,
    TOKEN_LE => 3,
    TOKEN_GT => 4,
    TOKEN_LT => 5,
    TOKEN_PLUSPLUS => 6,
    TOKEN_MINUSMINUS => 7,
    TOKEN_PLUS => 8,
    TOKEN_MINUS => 9,
    TOKEN_POW => 10,
    TOKEN_MUL => 11,
    TOKEN_MUL_ASSIGN => 12,
    TOKEN_LSHIFT => 13,
    TOKEN_RSHIFT => 14,
    TOKEN_LSHIFT_ASSIGN => 15,
    TOKEN_RSHIFT_ASSIGN => 16,
    TOKEN_AND => 17,
    TOKEN_ANDAND => 18,
    TOKEN_AND_ASSIGN => 19,
    TOKEN_OR => 20,
    TOKEN_OR_ASSIGN => 21,
    TOKEN_OROR => 22,
    TOKEN_OROR_ASSIGN => 23,
    TOKEN_DOT => 24,
    TOKEN_DOTDOT => 25,
    TOKEN_DOTDOTDOT => 26,
    TOKEN_XOR => 27,
    TOKEN_XOR_ASSIGN => 28,
    TOKEN_FILETEST => 29,
    TOKEN_LAMBDA => 30,
    TOKEN_PLUS_ASSIGN => 31,
    TOKEN_MINUS_ASSIGN => 32,
    TOKEN_REGEXP_MATCH => 33,
    TOKEN_REGEXP_NOT_MATCH => 34,
    TOKEN_EQUAL_EQUAL => 35,
    TOKEN_NOT_EQUAL => 36,
    TOKEN_ASSIGN => 37,
    TOKEN_FAT_COMMA => 38,
    TOKEN_NOT => 39,
    TOKEN_COMMA => 40,
    TOKEN_DIV => 41,
    TOKEN_MOD => 42,
    TOKEN_MOD_ASSIGN => 43,
    TOKEN_POW_ASSIGN => 44,
    TOKEN_DIV_ASSIGN => 45,
    TOKEN_DEREF => 46,
    TOKEN_REF => 47,
    TOKEN_TILDE => 48,
    TOKEN_LBRACKET => 49,
    TOKEN_STRING_QQ_START => 50,
    TOKEN_STRING_Q_START => 51,
    TOKEN_STRING_DQ => 52,
    TOKEN_STRING_SQ => 53,
    TOKEN_REGEXP_QR_START => 54,
    TOKEN_HEREDOC_SQ_START => 55,
    TOKEN_BYTES_SQ => 56,
    TOKEN_BYTES_DQ => 57,
    TOKEN_LPAREN => 58,
    TOKEN_LBRACE => 59,
    TOKEN_QW_START => 60,
};

our @EXPORT=qw(TOKEN_EOF TOKEN_CMP TOKEN_GE TOKEN_LE TOKEN_GT TOKEN_LT TOKEN_PLUSPLUS TOKEN_MINUSMINUS TOKEN_PLUS TOKEN_MINUS TOKEN_POW TOKEN_MUL TOKEN_MUL_ASSIGN TOKEN_LSHIFT TOKEN_RSHIFT TOKEN_LSHIFT_ASSIGN TOKEN_RSHIFT_ASSIGN TOKEN_AND TOKEN_ANDAND TOKEN_AND_ASSIGN TOKEN_OR TOKEN_OR_ASSIGN TOKEN_OROR TOKEN_OROR_ASSIGN TOKEN_DOT TOKEN_DOTDOT TOKEN_DOTDOTDOT TOKEN_XOR TOKEN_XOR_ASSIGN TOKEN_FILETEST TOKEN_LAMBDA TOKEN_PLUS_ASSIGN TOKEN_MINUS_ASSIGN TOKEN_REGEXP_MATCH TOKEN_REGEXP_NOT_MATCH TOKEN_EQUAL_EQUAL TOKEN_NOT_EQUAL TOKEN_ASSIGN TOKEN_FAT_COMMA TOKEN_NOT TOKEN_COMMA TOKEN_DIV TOKEN_MOD TOKEN_MOD_ASSIGN TOKEN_POW_ASSIGN TOKEN_DIV_ASSIGN TOKEN_DEREF TOKEN_REF TOKEN_TILDE TOKEN_LBRACKET TOKEN_STRING_QQ_START TOKEN_STRING_Q_START TOKEN_STRING_DQ TOKEN_STRING_SQ TOKEN_REGEXP_QR_START TOKEN_HEREDOC_SQ_START TOKEN_BYTES_SQ TOKEN_BYTES_DQ TOKEN_LPAREN TOKEN_LBRACE TOKEN_QW_START);

1;
